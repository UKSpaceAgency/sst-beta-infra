meta {
  name: Gets count of monitored Satellites within their organizations
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/v1/satellites/by-organizations?sort_by=satellites_count&limit=100&offset=0&sort_order=desc
  body: none
  auth: bearer
}

params:query {
  sort_by: satellites_count
  limit: 100
  offset: 0
  sort_order: desc
}

headers {
  Accept: application/json
}

auth:bearer {
  token: {{bearerToken}}
}

tests {
  const resp = res.getBody();
  
  const expected_keys = [
      "organizationName",
      "satellitesCount"
  ];
  
  test("Status code 200", function() {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Satellite counts returned contain expected fields", () => {
      resp.forEach(function (organisation) {
          expect(organisation).to.have.all.keys(expected_keys)
          });
  });
}

docs {
  ## Description
  Gets Satellite count within organizations and total count.
  
  ## User Roles
  |User Role       |Permissions                                                      |
  |----------------|-----------------------------------------------------------------|
  |Superuser       |Can list all satellites.                                         |
  |Analyst         |Can list all satellites.                                         |
  |Everyone else   |Can list satellites in their organization.                       |
}
