meta {
  name: Events By Satellite
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/v1/stats/events-by-satellite?timestamp_column=created_at&limit=100&offset=0&sort_order=asc
  body: none
  auth: bearer
}

params:query {
  timestamp_column: created_at
  limit: 100
  offset: 0
  sort_order: asc
  ~start_date: <dateTime>
  ~end_date: <dateTime>
  ~organization_id: <uuid>
}

headers {
  Accept: application/json
}

auth:bearer {
  token: {{bearerToken}}
}

tests {
  const resp = res.getBody();
  
  const expected_keys = [
      "commonName",
      "noradId",
      "events",
      "collisionProbabilityRange",
      "organizationName"
  ];
  
  test("Status code 200", function() {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Events by satellite (stats) returned contain expected fields", () => {
      resp.forEach(function (stat) {
          expect(stat).to.have.all.keys(expected_keys)
          });
  });
}

docs {
  ## Description
  Gets number of Events groupped by satellites and probability of collision.
  Superusers and Analysts can choose Organization satellites belong to.
  Other users can only see Events/Satellites from their organization.
  
  ## User Roles
  |User Role          |Permissions                                                      |
  |-------------------|-----------------------------------------------------------------|
  |Superuser          |Can see events across all organizations.                         |
  |Analyst            |Can see events across all organizations.                         |
  |Everyone           |Can see events in their own organization.                        |
}
