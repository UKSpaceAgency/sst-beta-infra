meta {
  name: Gets full list of Organizations.
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/v1/organizations/
  body: none
  auth: bearer
}

headers {
  Accept: application/json
}

auth:bearer {
  token: {{bearerToken}}
}

tests {
  const resp = res.getBody();
  
  const expected_keys = [
      "id",
      "createdAt",
      "updatedAt",
      "name",
      "emailDomain",
      "accountsCount",
      "adminAccountsCount",
      "satellitesCount"
  ];
  
  test("Status code 200", function() {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Organisations returned contain expected fields", () => {
      resp.forEach(function (organisation) {
              expect(organisation.id).to.be.a("string").that.have.a.lengthOf(36)
              expect(organisation.createdAt).to.be.a("string")
              expect(organisation.updatedAt).to.be.a("string")
              expect(organisation.name).to.be.a("string")
              expect(organisation.emailDomain).to.be.a("string")
              expect(organisation.accountsCount).to.be.a("number")
              expect(organisation.adminAccountsCount).to.be.a("number")
              expect(organisation.satellitesCount).to.be.a("number")
          });
  });
}

docs {
  ## Description
  Gets list of all organizations with the number of user and admin accounts.
  ## User Roles
  |User Role              |Permissions                                            |
  |-----------------------|-------------------------------------------------------|
  |Superuser              |Can list all organizations.                            |
  |Analyst                |Can list all organizations.                            |
  |Org Admin, Operator    |Can list his organizations.                            |
  |Everyone else          |Can't list organizations.                              |
}
