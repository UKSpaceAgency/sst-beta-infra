meta {
  name: Get single Event summary data
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/v1/events/:event_id/summary?limit=100&offset=0&sort_order=asc
  body: none
  auth: bearer
}

params:query {
  limit: 100
  offset: 0
  sort_order: asc
}

params:path {
  event_id: {{testEventShortId}}
}

headers {
  Accept: application/json
}

auth:bearer {
  token: {{bearerToken}}
}

tests {
  const resp = res.getBody();
  
  test("Status code 200", function() {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Filter by Event Short ID returns only events with that ID", function () {
      resp.forEach((event) => {
          expect(event.shortId).to.be.eql(bru.getVar("testEventShortId"))
      })
  });
}

docs {
  ## Description
  Returns summary data for an Event. Data can be taken from Analysis or from CDMs
  (the most recent type is returned).
  
  ## User Roles
  |User Role       |Permissions                                                         |
  |----------------|--------------------------------------------------------------------|
  |Superuser       |Can retrieve summaries for all events.                              |
  |Analyst         |Can retrieve summaries for all events.                              |
  |Everyone else   |Can retrieve summaries for events concerning user's organization.   |
}
