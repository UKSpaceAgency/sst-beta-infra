meta {
  name: MyS API
}

auth {
  mode: bearer
}

auth:bearer {
  token: {{bearerToken}}
}

vars:pre-request {
  testSatellitePrimaryNorad: 61604
  testSatelliteSecondaryNorad: 45321
  testEventShortId: ngawpao-xdvregl-jogeqg
  testCDMId: 987844281
  testEventId: 6436efe7-0252-4ef7-a407-dc2eb0cdde87
  testAnalysisEventShortId: laepogz-erkdrld-dadlkr
  testAnalysisAnalysisId: 
  testBannerId: 
  testBannerScheduleId: 
  testEphemerisId: 
  testEphemerisFileName: 
  testUserEmail: e2e@thepsc.co.uk
  testUserFirstName: End'to
  testUserId: 
  dateToday: 
  date5DaysAgo: 
}

script:pre-request {
  // // // Common test methods
  // console.log(bru.getEnvVar("bearerToken"))
  
  const utils = {
      isKeyValuePairInObjectList: function (list, key, value) {
          let found = false;
          list.forEach((obj) => {
              found = (found || (obj[key] === value));
          });
          return found;
      }
  };
  
  
  // var todaysDate = new Date();
  // bru.setVar("dateToday", encodeURIComponent(todaysDate.toISOString()));
  
  // var pastDate = new Date();
  // pastDate.setDate(pastDate.getDate() - 5);
  // bru.setVar("date5DaysAgo", encodeURIComponent(pastDate.toISOString()));
  
  const axios = require("axios");
  const querystring = require('querystring');
  
  if (!bru.getEnvVar("bearerToken")) {
    const response = await axios({
      method: 'post',
      url: bru.getEnvVar("authBaseUrl") + "/oauth/token",
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      data: querystring.stringify({
        'client_id': bru.getEnvVar("clientId"),
        'client_secret': bru.getEnvVar("clientSecret"),
        'grant_type': 'client_credentials',
        'audience': bru.getEnvVar("authAudience"),
      })
    });
    console.log(response.data.access_token);
    bru.setEnvVar("bearerToken", response.data.access_token);
  }
  
}

docs {
  REST API
}
