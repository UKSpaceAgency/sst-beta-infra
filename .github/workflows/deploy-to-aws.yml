name: Deploy to AWS
on:
  workflow_dispatch:
    inputs:
      invoker:
        description: 'Invoker'
        required: true
        default: ''
      env:
        description: 'Environment'
        required: false
        default: 'dev'
      image-tag:
        description: 'image ecr sha tag'
        required: true
        default: 'latest'

jobs:
  called_with_by:
    name: Objective
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "AWS Deploy ${{ github.event.inputs.invoker }} on ${{ github.event.inputs.env }}"

      - name: Send start message to Slack
        if: false # todo
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "*[${{ github.event.inputs.env }}] AWS Release Train* ${{ github.run_id }}: Leaving the station to execute *${{ github.event.inputs.invoker }}*"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK


  deploy:
    needs: called_with_by
    name: Deploy to AWS
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.env }}
    concurrency: ${{ github.event.inputs.env }}

    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout

    steps:
      - uses: hashicorp/setup-terraform@v2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: mcblair/configure-aws-profile-action@v0.1.1
        with:
          role-arn: arn:aws:iam::007301389989:role/gitlab-ecs-deployment-role
          profile-name: mys-dev-env
          region: eu-west-2

      - name: Terraform Back-End init and apply
        # if: ${{ github.event.inputs.invoker == 'backend' }}
        if: false # todo
        run: |          
          cd aws/envs/${{ github.event.inputs.env }}/${{ github.event.inputs.invoker }}      
          terraform init
          echo "image_tag = \"${{ github.event.inputs.image-tag }}\"" >> terraform.tfvars
          echo "env_name = \"${{ github.event.inputs.env }}\"" >> terraform.tfvars
          cat terraform.tfvars
          terraform apply -auto-approve

      - name: Terraform Front-End init and apply
        # if: ${{ github.event.inputs.invoker == 'frontend' }}
        if: false # todo
        run: |          
          cd aws/envs/${{ github.event.inputs.env }}/${{ github.event.inputs.invoker }}      
          terraform init
          echo "image_tag = \"${{ github.event.inputs.image-tag }}\"" >> terraform.tfvars
          echo "env_name = \"${{ github.event.inputs.env }}\"" >> terraform.tfvars
          cat terraform.tfvars
          terraform apply -auto-approve
      

      - name: Send build result to Slack
        if: false # todo
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "*[${{ github.event.inputs.env }}] AWS Release Train* ${{ github.run_id }}: Pulling into the station - ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Execute E2E tests
        uses: matt-ball/newman-action@master
        with:
          collection: aws/e2e_tests/postman_collection.json
          environment: aws/e2e_tests/postman_environment.json
          #reporters: '["emojitrain"]'
          envVar: '[{ "key": "clientId", "value": "${{ secrets.e2e_client_id }}" },{ "key": "clientSecret", "value": "${{ secrets.e2e_client_secret }}" },{ "key": "baseUrl", "value": "${{ secrets.e2e_base_url }}" },{ "key": "authBaseUrl", "value": "${{ secrets.e2e_auth0_base_url }}" },{ "key": "authAudience", "value": "${{ secrets.e2e_auth0_audience }}" }]'
