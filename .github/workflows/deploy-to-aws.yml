name: Deploy to AWS
on:
  workflow_dispatch:
    inputs:
      invoker:
        description: 'Invoker'
        required: true
        default: ''
      env:
        description: 'Environment'
        required: false
        default: 'dev'
      image-tag:
        description: 'image ecr sha tag'
        required: true
        default: 'latest'

jobs:
  called_with_by:
    name: Objective
    runs-on: ubuntu-latest

#    steps:
#      - run: |
#          echo "Deploy ${{ github.event.inputs.invoker }} on ${{ github.event.inputs.env }}"
#
#      - name: Send start message to Slack
#        id: slack
#        uses: slackapi/slack-github-action@v1.23.0
#        with:
#          # For posting a rich message using Block Kit
#          payload: |
#            {
#              "text": "*[${{ github.event.inputs.env }}] Release Train* ${{ github.run_id }}: Leaving the station to execute *${{ github.event.inputs.invoker }}*"
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK


  deploy:
    needs: called_with_by
    name: Deploy to AWS
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.env }}
    concurrency: ${{ github.event.inputs.env }}

    steps:
      - uses: hashicorp/setup-terraform@v2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Terraform Back-End
        if: ${{ github.event.inputs.invoker == 'back-end' }}
        run: |
          cd aws/envs/${{ github.event.inputs.env }}/${{ github.event.inputs.invoker }}
          terraform plan \
            -var="image_tag={{ github.event.inputs.image-tag }}" \
            -var="env_name={{ github.event.inputs.env }}" \
            -auto-approve 
