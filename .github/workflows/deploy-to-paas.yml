name: Deploy to PaaS
on:
  workflow_dispatch:
    inputs:
      invoker:
        description: 'Invoker'
        required: true
        default: ''
      env:
        description: 'Environment'
        required: false
        default: 'dev'

jobs:
  called_with_by:
    name: Objective
    runs-on: ubuntu-latest

    steps:
      - run: |
          echo "Deploy ${{ github.event.inputs.invoker }} on ${{ github.event.inputs.env }}"

      - name: Send start message to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.17.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "*[${{ github.event.inputs.env }}] Release Train* ${{ github.run_id }}: Leaving the station to execute *${{ github.event.inputs.invoker }}*"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  deploy:
    needs: called_with_by
    name: Deploy to Gov.UK PaaS
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.env }}
    concurrency: ${{ github.event.inputs.env }}

    steps:
      - uses: hashicorp/setup-terraform@v1
      
      - name: Checkoutm Main Branch
        uses: actions/checkout@v2

      - name: Download Build Artifacts
        run: |
          ./scripts/download-build-assets.sh
        env:
          TF_GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}

      - name: Terraform Init
        run: |
          terraform init \
            -reconfigure \
            -backend-config="key=${{ secrets.s3_backend_key }}" \
            -backend-config="region=${{ secrets.s3_backend_region }}" \
            -backend-config="bucket=${{ secrets.s3_backend_bucket }}" \
            -backend-config="access_key=${{ secrets.s3_backend_access_key }}" \
            -backend-config="secret_key=${{ secrets.s3_backend_secret_key }}"

      - name: Terraform Plan
        if: ${{ github.event.inputs.invoker == 'plan' }}
        run: |
          terraform plan \
            -var-file="${{ secrets.env_tfvars }}" \
            -var="paas_username=${{ secrets.paas_username }}" \
            -var="paas_password=${{ secrets.paas_password }}" \
            -var="github_token=${{ secrets.tf_github_token }}" \
            -var="logit_service_url=${{ secrets.logit_endpoint }}" \
            -var="spacetrack_username=${{ secrets.spacetrack_username }}" \
            -var="spacetrack_password=${{ secrets.spacetrack_password }}" \
            -var="notify_api_key=${{ secrets.notify_api_key }}" \
            -var="user_service_jwt_authentication_secret=${{ secrets.user_service_jwt_authentication_secret }}" \
            -var="user_service_reset_password_token_secret=${{ secrets.user_service_reset_password_token_secret }}" \
            -var="user_service_verification_token_secret=${{ secrets.user_service_verification_token_secret }}" \
            -var="spacetrack_run_at_hour=${{ secrets.spacetrack_run_at_hour }}" \
            -var="spacetrack_run_at_minute=${{ secrets.spacetrack_run_at_minute }}" \
            -var="piwik_id=${{ secrets.piwik_id }}" \
            -var="i18nexus_api_key=${{ secrets.i18nexus_api_key }}" \
            -var="cosmic_bucket_slug=${{ secrets.cosmic_bucket_slug }}" \
            -var="cosmic_read_key=${{ secrets.cosmic_read_key }}" \
            -var="cosmic_preview_secret=${{ secrets.cosmic_preview_secret }}" \
            -var="nextauth_secret=${{ secrets.nextauth_secret }}" \
            -var="auth0_issuer=${{ secrets.auth0_issuer }}" \
            -var="auth0_client_id=${{ secrets.auth0_client_id }}" \
            -var="auth0_client_secret=${{ secrets.auth0_client_secret }}" \
            -var="auth0_jwks_url=${{ secrets.auth0_jwks_url }}" \
            -var="auth0_audience=${{ secrets.auth0_audience }}" \
            -var="esa_discos_access_token=${{ secrets.esa_discos_access_token }}" \
            -var="hashid_salt=${{ secrets.hashid_salt }}" \
            -var="auth0_management_client_id=${{ secrets.auth0_management_client_id }}" \
            -var="auth0_management_client_secret=${{ secrets.auth0_management_client_secret }}" \
            -var="notifiers_webhook_url=${{ secrets.notifiers_webhook_url }}" \
            -var="auth0_management_domain=${{ secrets.auth0_management_domain }}"

      - name: Terraform Apply
        if: ${{ github.event.inputs.invoker == 'apply' }} || ${{ github.event.inputs.invoker == 'back-end' }} || ${{ github.event.inputs.invoker == 'front-end' }}
        run: |
          terraform apply \
            -auto-approve \
            -var-file="${{ secrets.env_tfvars }}" \
            -var="maintenance_mode=true" \
            -var="paas_username=${{ secrets.paas_username }}" \
            -var="paas_password=${{ secrets.paas_password }}" \
            -var="github_token=${{ secrets.tf_github_token }}" \
            -var="logit_service_url=${{ secrets.logit_endpoint }}" \
            -var="spacetrack_username=${{ secrets.spacetrack_username }}" \
            -var="spacetrack_password=${{ secrets.spacetrack_password }}" \
            -var="notify_api_key=${{ secrets.notify_api_key }}" \
            -var="user_service_jwt_authentication_secret=${{ secrets.user_service_jwt_authentication_secret }}" \
            -var="user_service_reset_password_token_secret=${{ secrets.user_service_reset_password_token_secret }}" \
            -var="user_service_verification_token_secret=${{ secrets.user_service_verification_token_secret }}" \
            -var="spacetrack_run_at_hour=${{ secrets.spacetrack_run_at_hour }}" \
            -var="spacetrack_run_at_minute=${{ secrets.spacetrack_run_at_minute }}" \
            -var="piwik_id=${{ secrets.piwik_id }}" \
            -var="i18nexus_api_key=${{ secrets.i18nexus_api_key }}" \
            -var="cosmic_bucket_slug=${{ secrets.cosmic_bucket_slug }}" \
            -var="cosmic_read_key=${{ secrets.cosmic_read_key }}" \
            -var="cosmic_preview_secret=${{ secrets.cosmic_preview_secret }}" \
            -var="nextauth_secret=${{ secrets.nextauth_secret }}" \
            -var="auth0_issuer=${{ secrets.auth0_issuer }}" \
            -var="auth0_client_id=${{ secrets.auth0_client_id }}" \
            -var="auth0_client_secret=${{ secrets.auth0_client_secret }}" \
            -var="auth0_jwks_url=${{ secrets.auth0_jwks_url }}" \
            -var="auth0_audience=${{ secrets.auth0_audience }}" \
            -var="esa_discos_access_token=${{ secrets.esa_discos_access_token }}" \
            -var="hashid_salt=${{ secrets.hashid_salt }}" \
            -var="auth0_management_client_id=${{ secrets.auth0_management_client_id }}" \
            -var="auth0_management_client_secret=${{ secrets.auth0_management_client_secret }}" \
            -var="notifiers_webhook_url=${{ secrets.notifiers_webhook_url }}" \
            -var="auth0_management_domain=${{ secrets.auth0_management_domain }}"

      - name: Terraform Turn Off Maintenance Page
        if: ${{ github.event.inputs.invoker == 'apply' }} || ${{ github.event.inputs.invoker == 'back-end' }} || ${{ github.event.inputs.invoker == 'front-end' }}
        run: |
          terraform apply \
            -auto-approve \
            -var-file="${{ secrets.env_tfvars }}" \
            -var="paas_username=${{ secrets.paas_username }}" \
            -var="paas_password=${{ secrets.paas_password }}" \
            -var="github_token=${{ secrets.tf_github_token }}" \
            -var="logit_service_url=${{ secrets.logit_endpoint }}" \
            -var="spacetrack_username=${{ secrets.spacetrack_username }}" \
            -var="spacetrack_password=${{ secrets.spacetrack_password }}" \
            -var="notify_api_key=${{ secrets.notify_api_key }}" \
            -var="user_service_jwt_authentication_secret=${{ secrets.user_service_jwt_authentication_secret }}" \
            -var="user_service_reset_password_token_secret=${{ secrets.user_service_reset_password_token_secret }}" \
            -var="user_service_verification_token_secret=${{ secrets.user_service_verification_token_secret }}" \
            -var="spacetrack_run_at_hour=${{ secrets.spacetrack_run_at_hour }}" \
            -var="spacetrack_run_at_minute=${{ secrets.spacetrack_run_at_minute }}" \
            -var="piwik_id=${{ secrets.piwik_id }}" \
            -var="i18nexus_api_key=${{ secrets.i18nexus_api_key }}" \
            -var="cosmic_bucket_slug=${{ secrets.cosmic_bucket_slug }}" \
            -var="cosmic_read_key=${{ secrets.cosmic_read_key }}" \
            -var="cosmic_preview_secret=${{ secrets.cosmic_preview_secret }}" \
            -var="nextauth_secret=${{ secrets.nextauth_secret }}" \
            -var="auth0_issuer=${{ secrets.auth0_issuer }}" \
            -var="auth0_client_id=${{ secrets.auth0_client_id }}" \
            -var="auth0_client_secret=${{ secrets.auth0_client_secret }}" \
            -var="auth0_jwks_url=${{ secrets.auth0_jwks_url }}" \
            -var="auth0_audience=${{ secrets.auth0_audience }}" \
            -var="esa_discos_access_token=${{ secrets.esa_discos_access_token }}" \
            -var="hashid_salt=${{ secrets.hashid_salt }}" \
            -var="auth0_management_client_id=${{ secrets.auth0_management_client_id }}" \
            -var="auth0_management_client_secret=${{ secrets.auth0_management_client_secret }}" \
            -var="notifiers_webhook_url=${{ secrets.notifiers_webhook_url }}" \
            -var="auth0_management_domain=${{ secrets.auth0_management_domain }}"

      - name: Terraform Destroy DB Migration
        if: ${{ github.event.inputs.invoker != 'plan' }}
        run: |
          terraform destroy \
            -target=module.back-end.cloudfoundry_app.db_migration \
            -auto-approve \
            -var-file="${{ secrets.env_tfvars }}" \
            -var="paas_username=${{ secrets.paas_username }}" \
            -var="paas_password=${{ secrets.paas_password }}" \
            -var="github_token=${{ secrets.tf_github_token }}" \
            -var="logit_service_url=${{ secrets.logit_endpoint }}" \
            -var="spacetrack_username=${{ secrets.spacetrack_username }}" \
            -var="spacetrack_password=${{ secrets.spacetrack_password }}" \
            -var="notify_api_key=${{ secrets.notify_api_key }}" \
            -var="user_service_jwt_authentication_secret=${{ secrets.user_service_jwt_authentication_secret }}" \
            -var="user_service_reset_password_token_secret=${{ secrets.user_service_reset_password_token_secret }}" \
            -var="user_service_verification_token_secret=${{ secrets.user_service_verification_token_secret }}" \
            -var="spacetrack_run_at_hour=${{ secrets.spacetrack_run_at_hour }}" \
            -var="spacetrack_run_at_minute=${{ secrets.spacetrack_run_at_minute }}" \
            -var="piwik_id=${{ secrets.piwik_id }}" \
            -var="i18nexus_api_key=${{ secrets.i18nexus_api_key }}" \
            -var="cosmic_bucket_slug=${{ secrets.cosmic_bucket_slug }}" \
            -var="cosmic_read_key=${{ secrets.cosmic_read_key }}" \
            -var="cosmic_preview_secret=${{ secrets.cosmic_preview_secret }}" \
            -var="nextauth_secret=${{ secrets.nextauth_secret }}" \
            -var="auth0_issuer=${{ secrets.auth0_issuer }}" \
            -var="auth0_client_id=${{ secrets.auth0_client_id }}" \
            -var="auth0_client_secret=${{ secrets.auth0_client_secret }}" \
            -var="auth0_jwks_url=${{ secrets.auth0_jwks_url }}" \
            -var="auth0_audience=${{ secrets.auth0_audience }}" \
            -var="esa_discos_access_token=${{ secrets.esa_discos_access_token }}" \
            -var="hashid_salt=${{ secrets.hashid_salt }}" \
            -var="auth0_management_client_id=${{ secrets.auth0_management_client_id }}" \
            -var="auth0_management_client_secret=${{ secrets.auth0_management_client_secret }}" \
            -var="notifiers_webhook_url=${{ secrets.notifiers_webhook_url }}" \
            -var="auth0_management_domain=${{ secrets.auth0_management_domain }}"

      - name: Send build result to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.17.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "*[${{ github.event.inputs.env }}] Release Train* ${{ github.run_id }}: Pulling into the station - ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
