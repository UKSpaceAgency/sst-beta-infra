name: Deploy to PaaS
on:
  workflow_dispatch:
    inputs:
      invoker:
        description: 'Invoker'
        required: true
        default: ''
      env:
        description: 'Environment'
        required: false
        default: 'dev'

jobs:
  called_with_by:
    name: Objective
    runs-on: ubuntu-latest

    steps:
      - run: |
          echo "Deploy ${{ github.event.inputs.invoker }} on ${{ github.event.inputs.env }}"

  deploy:
    needs: called_with_by
    name: Deploy to Gov.UK PaaS
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.env }}
    defaults:
      run:
        working-directory: ./paas
    concurrency: ${{ github.event.inputs.env }}

    steps:
      - uses: hashicorp/setup-terraform@v1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Init
        run: |
          terraform init \
            -reconfigure \
            -backend-config="key=${{ secrets.s3_backend_key }}" \
            -backend-config="region=${{ secrets.s3_backend_region }}" \
            -backend-config="bucket=${{ secrets.s3_backend_bucket }}" \
            -backend-config="access_key=${{ secrets.s3_backend_access_key }}" \
            -backend-config="secret_key=${{ secrets.s3_backend_secret_key }}"

      - name: Terraform Apply Front-End
        if: ${{ github.event.inputs.invoker == 'front-end' }}
        run: |
          terraform apply \
            -replace=cloudfoundry_app.fe \
            -replace=cloudfoundry_app.api \
            -auto-approve \
            -var-file="${{ secrets.env_tfvars }}" \
            -var="paas_username=${{ secrets.paas_username }}" \
            -var="paas_password=${{ secrets.paas_password }}" \
            -var="github_token=${{ secrets.tf_github_token }}" \
            -var="logit_endpoint=${{ secrets.logit_endpoint }}" \
            -var="spacetrack_username=${{ secrets.spacetrack_username }}" \
            -var="spacetrack_password=${{ secrets.spacetrack_password }}"

      - name: Terraform Apply Back-End
        if: ${{ github.event.inputs.invoker == 'back-end' }}
        run: |
          terraform apply \
            -replace=cloudfoundry_app.be \
            -auto-approve \
            -var-file="${{ secrets.env_tfvars }}" \
            -var="paas_username=${{ secrets.paas_username }}" \
            -var="paas_password=${{ secrets.paas_password }}" \
            -var="github_token=${{ secrets.tf_github_token }}" \
            -var="logit_endpoint=${{ secrets.logit_endpoint }}" \
            -var="spacetrack_username=${{ secrets.spacetrack_username }}" \
            -var="spacetrack_password=${{ secrets.spacetrack_password }}"

      - name: Terraform Apply All
        if: ${{ github.event.inputs.invoker == 'all' }}
        run: |
          terraform apply \
            -replace=cloudfoundry_app.fe \
            -replace=cloudfoundry_app.api \
            -replace=cloudfoundry_app.be \
            -auto-approve \
            -var-file="${{ secrets.env_tfvars }}" \
            -var="paas_username=${{ secrets.paas_username }}" \
            -var="paas_password=${{ secrets.paas_password }}" \
            -var="github_token=${{ secrets.tf_github_token }}" \
            -var="logit_endpoint=${{ secrets.logit_endpoint }}" \
            -var="spacetrack_username=${{ secrets.spacetrack_username }}" \
            -var="spacetrack_password=${{ secrets.spacetrack_password }}"


      - name: Terraform Apply
        if: ${{ github.event.inputs.invoker == 'apply' }}
        run: |
          terraform apply \
            -auto-approve \
            -var-file="${{ secrets.env_tfvars }}" \
            -var="paas_username=${{ secrets.paas_username }}" \
            -var="paas_password=${{ secrets.paas_password }}" \
            -var="github_token=${{ secrets.tf_github_token }}" \
            -var="logit_endpoint=${{ secrets.logit_endpoint }}" \
            -var="spacetrack_username=${{ secrets.spacetrack_username }}" \
            -var="spacetrack_password=${{ secrets.spacetrack_password }}"

      - name: Terraform Destroy DB Migration
        run: |
          terraform destroy \
            -target=cloudfoundry_app.db_migration \
            -auto-approve \
            -var-file="${{ secrets.env_tfvars }}" \
            -var="paas_username=${{ secrets.paas_username }}" \
            -var="paas_password=${{ secrets.paas_password }}" \
            -var="github_token=${{ secrets.tf_github_token }}" \
            -var="logit_endpoint=${{ secrets.logit_endpoint }}" \
            -var="spacetrack_username=${{ secrets.spacetrack_username }}" \
            -var="spacetrack_password=${{ secrets.spacetrack_password }}"
